#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

[ -z "$MDLT_ORIGIN" ] && echo "RemoteConsole: Working in $MMDAPP" >&2
[ -f "$HOME/.bashrc" ] && . "$HOME/.bashrc" 

[ -z "MDSC_ARGUMENTS" ] || {
	set -- $MDSC_ARGUMENTS
	export MDSC_ARGUMENTS=""
}

. "${MDLT_ORIGIN:-$MMDAPP/.local}/myx/myx.distro-remote/sh-lib/RemoteContext.include"
DistroRemoteContext --run-from-detect

# export BASH_ENV="$MDLT_ORIGIN/myx/myx.distro-remote/sh-lib/console-remote-bashrc.rc"

if [ -x "$MDLT_ORIGIN/myx/myx.common/os-myx.common/host/tarball/bin/myx.common" ] ; then
	export MYXROOT="$MDLT_ORIGIN/myx/myx.common/os-myx.common/host/tarball/share/myx.common"
	PATH="$MDLT_ORIGIN/myx/myx.common/os-myx.common/host/tarball/bin:$PATH"
fi

# add paths, replace if any
PATH=$(
  printf '%s:%s:%s' \
    "${PATH//:$MDLT_ORIGIN\/myx\/myx.distro-*\/sh-scripts/}" \
    "$MDLT_ORIGIN/myx/myx.distro-remote/sh-scripts" \
    "$MDLT_ORIGIN/myx/myx.distro-.local/sh-scripts"
)

# search: 1) previous path; 2) distro {.local|system|deploy|source} scripts.

if [ -d "$MDLT_ORIGIN/myx/myx.distro-system/sh-scripts" ] ; then
	PATH+=":$MDLT_ORIGIN/myx/myx.distro-system/sh-scripts"
fi

if [ -d "$MDLT_ORIGIN/myx/myx.distro-deploy/sh-scripts" ] ; then
	PATH+=":$MDLT_ORIGIN/myx/myx.distro-deploy/sh-scripts"
fi

if [ -d "$MDLT_ORIGIN/myx/myx.distro-source/sh-scripts" ] ; then
	PATH+=":$MDLT_ORIGIN/myx/myx.distro-source/sh-scripts"
fi

if [ -d "$MDLT_ORIGIN/myx/myx.distro-remote/sh-scripts" ] ; then
	RemoteConsole(){
		bash --rcfile "$MDLT_ORIGIN/myx/myx.distro-remote/sh-lib/console-remote-bashrc.rc" -i "$@"
		return 0
	}
fi

Help(){
	( . "$MDLT_ORIGIN/myx/myx.distro-remote/sh-lib/help/HelpDistroRemoteConsole.include" )
	set +e ; return 1
}


[ "$USER" = "$( id -un )" ] || {
	export USER="$( id -un )"
}


while true; do 
	case "$(
		set -- --.local-config-option-select-default MDLT_CONSOLE_HISTORY default
		. "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/LocalTools.Config.include"
	)" in
		workspace-personal|default)
			mkdir -p "$MMDAPP/.local/home/${USER}"
			export HISTFILE="$MMDAPP/.local/home/${USER}/.bash_history" ;;
		workspace-separate)
			mkdir -p "$MMDAPP/.local/home/${USER}"
			export HISTFILE="$MMDAPP/.local/home/${USER}/.bash_history_remote" ;;
		local-machine-home)
			export HISTFILE="$HOME/.bash_history_${MMDAPP##*/}" ;;
		workspace-shared)
			export HISTFILE="$MMDAPP/.local/.common_bash_history" ;;
		bash-default)
			export HISTFILE="$HOME/.bash_history"; break ;;
		user-default) 
			break ;;
		*)
			echo "⛔ ERROR: unknown MDSC_HISTORY: $MDSC_HISTORY" >&2; exit 1 ;;
	esac 
	export HISTCONTROL=ignoredups:erasedups
	export HISTSIZE=999
	export HISTFILESIZE=99999
	shopt -s histappend 2>/dev/null || :
	break
done


# ⚠️ Order matters in Bash 3.2: the wildcard ("*") registration must come before the specific (Distro) one, so that when you type:
#complete -W "Help Action Require Distro Deploy Source" \

#if complete -D &>/dev/null; then
#	complete -F Distro -D
#fi

complete -W "Help Require" \
         -o default -o filenames \
         "*"
complete -F Remote \
         -o filenames \
        "Action" "Require" "Remote" "Distro" "Deploy" "Source"

export LANG=en_US.UTF-8

PROMPT_COMMAND='set +e ; history -w; history -r ; PS1="$( Remote --shell-prompt )"'

export PATH

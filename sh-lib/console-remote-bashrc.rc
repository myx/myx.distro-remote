#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

[ -z "$MDLT_ORIGIN" ] && echo "RemoteConsole: Working in $MMDAPP" >&2
[ -f "$HOME/.bashrc" ] && . "$HOME/.bashrc" 

[ -z "MDSC_ARGUMENTS" ] || {
	set -- $MDSC_ARGUMENTS
	export MDSC_ARGUMENTS=""
}

. "${MDLT_ORIGIN:-$MMDAPP/.local}/myx/myx.distro-remote/sh-lib/RemoteContext.include"
DistroRemoteContext --run-from-detect

# export BASH_ENV="$MDLT_ORIGIN/myx/myx.distro-remote/sh-lib/console-remote-bashrc.rc"

if [ -x "$MDLT_ORIGIN/myx/myx.common/os-myx.common/host/tarball/bin/myx.common" ] ; then
	: ${MYXROOT:=$MDLT_ORIGIN/myx/myx.common/os-myx.common/host/tarball/share/myx.common}
	PATH="$MDLT_ORIGIN/myx/myx.common/os-myx.common/host/tarball/bin:$PATH"
fi

# add paths, replace if any
PATH=$(
  printf '%s:%s:%s' \
    "${PATH//:$MDLT_ORIGIN\/myx\/myx.distro-*\/sh-scripts/}" \
    "$MDLT_ORIGIN/myx/myx.distro-remote/sh-scripts" \
    "$MDLT_ORIGIN/myx/myx.distro-.local/sh-scripts"
)

# search: 1) previous path; 2) distro {.local|system|deploy|source} scripts.

if [ -d "$MDLT_ORIGIN/myx/myx.distro-system/sh-scripts" ] ; then
	PATH+=":$MDLT_ORIGIN/myx/myx.distro-system/sh-scripts"
fi

if [ -d "$MDLT_ORIGIN/myx/myx.distro-deploy/sh-scripts" ] ; then
	PATH+=":$MDLT_ORIGIN/myx/myx.distro-deploy/sh-scripts"
fi

if [ -d "$MDLT_ORIGIN/myx/myx.distro-source/sh-scripts" ] ; then
	PATH+=":$MDLT_ORIGIN/myx/myx.distro-source/sh-scripts"
fi

if [ -d "$MDLT_ORIGIN/myx/myx.distro-remote/sh-scripts" ] ; then
	RemoteConsole(){
		bash --rcfile "$MDLT_ORIGIN/myx/myx.distro-remote/sh-lib/console-remote-bashrc.rc" -i "$@"
		return 0
	}
fi

Help(){
	( . "$MDLT_ORIGIN/myx/myx.distro-remote/sh-lib/help/HelpDistroRemoteConsole.include" )
	set +e ; return 1
}

# ⚠️ Order matters in Bash 3.2: the wildcard ("*") registration must come before the specific (Distro) one, so that when you type:
#complete -W "Help Action Require Distro Deploy Source" \

#if complete -D &>/dev/null; then
#	complete -F Distro -D
#fi

complete -W "Help Require" \
         -o default -o filenames \
         "*"
complete -F Remote \
         -o filenames \
        "Action" "Require" "Remote" "Distro" "Deploy" "Source"

PROMPT_COMMAND="set +e"
PS1="\` Remote --shell-prompt \`: $PS1"

export PS1 PATH

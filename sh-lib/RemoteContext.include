#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

: "${MMDAPP:?⛔ ERROR: MMDAPP is not set}"

: "${MDLT_ORIGIN:=$MMDAPP/.local}"

if ! type DistroRemoteContext >/dev/null 2>&1 ; then
	if ! type Require >/dev/null 2>&1 ; then
		Require(){
			local distroCommand="$1" ; shift
			if [ -z "$distroCommand" ] || [ "--help" = "$distroCommand" ] ; then
				( . "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/help/Help.Require.include" )
				set +e ; return 1
			fi
			if type "${distroCommand%.fn.sh}" >/dev/null 2>&1 ; then
				return 0
			fi
			
			local ITEM
			for ITEM in remote .local system source deploy ; do
				if [ -f "$MDLT_ORIGIN/myx/myx.distro-$ITEM/sh-scripts/${distroCommand%.fn.sh}.fn.sh" ] ; then
					. "$MDLT_ORIGIN/myx/myx.distro-$ITEM/sh-scripts/${distroCommand%.fn.sh}.fn.sh"
					return 0
				fi
			done
			source "${distroCommand%.fn.sh}.fn.sh"
		}
	fi

	if ! type Remote >/dev/null 2>&1 ; then
		Remote(){
			if [[ -n "$COMP_LINE" || -n "$COMP_WORDS" ]] && [ "${1#--completion}" = "$1" ]; then
				. "$MDLT_ORIGIN/myx/myx.distro-remote/sh-lib/RemoteConsole.CompletionFunction.include"
				return 0
			fi
			case "$1" in
				''|--*)
					( set -e ; . "$MDLT_ORIGIN/myx/myx.distro-remote/sh-lib/RemoteConsole.include" )
					return 0
				;;
			esac
			local distroCommand="$1" ; shift
			if ! type "${distroCommand%.fn.sh}" >/dev/null 2>&1 ; then
				if ! command -v "${distroCommand%.fn.sh}.fn.sh" >/dev/null 2>&1; then
					echo "⛔ ERROR: unknown command: ${distroCommand%.fn.sh}" >&2
					set +e ; return 1
				fi
				. "${distroCommand%.fn.sh}.fn.sh"
			fi

			set +e ; "${distroCommand%.fn.sh}" "$@" || {
				EXITCODE=$?
				echo "⛔ ERROR: exited with error status ($EXITCODE)" >&2
				set +e ; return $EXITCODE
			}
			return 0
		}
	fi

	DistroRemoteContext(){
		case "$1" in
			--is-spec-option)
				case "$2" in
					--run-from-source|--run-from-.local|--run-from-detect|--init-variables|--run-from-path)
						return 0
					;;
				esac
				set +e ; return 1
			;;
			--init-variables|--run-from-detect)
				if [ -n "$MDLT_ORIGIN" ] && [ -n "$MDLT_OPTION" ] ; then
					return 0
				fi
				[ -z "$MDSC_DETAIL" ] || echo "DistroRemoteContext: input spec: $1" >&2
				. "$MDLT_ORIGIN/myx/myx.distro-remote/sh-lib/RemoteContext.SetInputSpec.include"
				return 0
			;;
			--run-from-*|--init-*)
				if DistroRemoteContext --is-spec-option "$1" ; then
					[ -z "$MDSC_DETAIL" ] || echo "DistroRemoteContext: input spec: $1" >&2
					. "$MDLT_ORIGIN/myx/myx.distro-remote/sh-lib/RemoteContext.SetInputSpec.include"
					return 0
				fi
			;;
		esac
	}
fi

while true ; do
	case "$1" in
		'')
			return 0
		;;
		--verbose)
			export MDSC_DETAIL=true ; shift
			continue
		;;
		--distro-*|--run-from-*|--init-*)
			if DistroRemoteContext --is-spec-option "$1" ; then
				[ -n "$MDSC_DETAIL" ] && echo "DistroRemoteContext: input spec: $1" >&2
				. "$MDLT_ORIGIN/myx/myx.distro-remote/sh-lib/RemoteContext.SetInputSpec.include"		
				shift
				continue
			fi
			break
		;;
	esac
	return 0
done

